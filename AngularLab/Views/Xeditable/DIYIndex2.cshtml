@{
    ViewBag.Title = "DIY2";
}
<style>
    /*ngMessage ng-active*/
    .error-messages.ng-active, ng-active:after {
        background: maroon;
        color: white;
        padding: 2px;
        border-radius: 5px;
        margin-top: 15px;
        position: relative;
    }

        .error-messages.ng-active:after {
            position: absolute;
            top: -10px;
            content: "";
            left: 20px;
            border-style: solid;
            border-color: transparent transparent maroon;
            border-width: 5px;
        }
</style>
<h2>DIY</h2>
<div ng-app="app" ng-controller="Ctrl">
    @*<form name="rowform"></form>*@
    <table class="table table-bordered table-hover table-condensed">
        <tr style="font-weight: bold">
            <td style="width:10px">no</td>
            <td style="width:20%">Name</td>
            <td style="width:40%">Status</td>
            <td style="width:35%">Edit</td>
        </tr>
        <tr ng-repeat="user in users" ng-form="rowform" ng-click="edit($index);">
            <td>
                <span>{{rowform.$invalid}}</span>
            </td>

            <td>
                <div ng-if="user.isEdit">
                    <input class="form-control" id="name" name="name" ng-model="user.name" type="text" required />
                    <div class="error-messages" ng-messages="rowform['name'].$error">
                        <div ng-message="required">required</div>
                    </div>
                </div>
                <div ng-if="!user.isEdit">
                    {{user.name}}
                </div>
            </td>
            <td ng-if="user.isEdit">
                <input class="form-control" id="status" name="status" ng-model="user.status" type="text" required />
                <div class="error-messages" ng-messages="rowform['status'].$error" ng-show="rowform.$submitted || rowform['status'].$touched">
                    <div ng-message="required">required</div>
                </div>
            </td>
            <td ng-if="!user.isEdit">
                {{user.status}}
            </td>
            <td ng-if="user.isEdit">
                <button type="submit" ng-disabled="rowform.$invalid" ng-click="save($index,$event);" class=" btn btn-primary">
                    save
                </button>
                <button type="button" ng-click="cancel($index,$event);" class="btn btn-default">
                    cancel
                </button>

            </td>
            <td ng-if="!user.isEdit"></td>
        </tr>
    </table>

    <button class="btn btn-default" ng-click="addUser()">Add row</button>
</div>


@section scripts{
    <script>
        var app = angular.module("app", ["ngMessages"]);

        app.controller('Ctrl', function ($scope, $filter, $http) {
            $scope.users = [
               { id: 1, name: null, status: 2, group: 4, groupName: 'admin' },
               { id: 2, name: 'awesome user2', status: undefined, group: 3, groupName: 'vip' },
               { id: 3, name: 'awesome user3', status: 2, group: null }
            ];

            $scope.statuses = [
              { value: 1, text: 'status1' },
              { value: 2, text: 'status2' },
              { value: 3, text: 'status3' },
              { value: 4, text: 'status4' }
            ];

            $scope.groups = [];
            $scope.loadGroups = function () {
                //return $scope.groups.length ? null : $http.get('/groups').success(function (data) {
                //    $scope.groups = data;
                //});
                $scope.groups = [{ id: 1, text: 'user' },
    { id: 2, text: 'customer' },
    { id: 3, text: 'vip' },
    { id: 4, text: 'admin' }];
            };

            $scope.showGroup = function (user) {
                if (user.group && $scope.groups.length) {
                    var selected = $filter('filter')($scope.groups, { id: user.group });
                    return selected.length ? selected[0].text : 'Not set';
                } else {
                    return user.groupName || 'Not set';
                }
            };

            $scope.showStatus = function (user) {
                var selected = [];
                if (user.status) {
                    selected = $filter('filter')($scope.statuses, { value: user.status });
                }
                return selected.length ? selected[0].text : 'Not set';
            };

            $scope.checkName = function (data, id) {
                if (id === 2 && data !== 'awesome') {
                    return "Username 2 should be `awesome`";
                }
            };

            $scope.saveUser = function (data, id) {
                //$scope.user not updated yet
                angular.extend(data, { id: id });
                return [200, { status: 'ok' }];
            };

            // remove user
            $scope.removeUser = function (index) {
                $scope.users.splice(index, 1);
            };

            // add user
            $scope.addUser = function () {
                $scope.inserted = {
                    id: $scope.users.length + 1,
                    name: '',
                    status: null,
                    group: null
                };
                $scope.users.push($scope.inserted);
            };

            $scope.edit = function (index) {
                if ($scope.users[index].isEdit)
                    return;
                $scope.users[index].isEdit = true;
                $scope.users[index].old = angular.copy($scope.users[index]);
            }
            $scope.cancel = function (index, $event) {
                $scope.users[index] = $scope.users[index].old;
                $scope.users[index].isEdit = false;

                $event.stopPropagation();
            }

            $scope.save = function (index, $event) {
                $scope.users[index].isEdit = false;
                $scope.users[index].old = null;
                $event.stopPropagation();
            }
        });
    </script>

}